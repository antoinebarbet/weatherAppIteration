{"ast":null,"code":"var _jsxFileName = \"/Users/antoinebarbet/Projet Perso/weatherapp/src/component/actualPos.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport apiFetcher from \"../shared/apiFetcher\";\nimport parsingData from \"../shared/parsingData\";\nimport WeatherVue from \"./weather\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ActualPos = () => {\n  _s();\n\n  const [location, setLocation] = useState();\n  const [userInput, setUserInput] = useState();\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [dataWeather, setData] = useState();\n  const date = new Date();\n  React.useEffect(() => {\n    navigator.geolocation.getCurrentPosition(pos => {\n      let loc = {\n        longitude: pos.coords.longitude.toString(),\n        latitude: pos.coords.latitude.toString()\n      };\n      setLocation(loc);\n    });\n  }, [location]);\n\n  const handleSubmit = async () => {\n    if (!userInput) {\n      return;\n    }\n\n    apiFetcher({\n      url: `http://api.weatherapi.com/v1/current.json?key=${process.env.REACT_APP_APIKEYW}&q=${userInput}&aqi=no`\n    }).then(jsonData => {\n      if (typeof jsonData === \"string\") {\n        setErrorMessage(\"The chosen location is not available.\");\n      } else {\n        setData(parsingData(jsonData));\n        setErrorMessage(\"\");\n      }\n    }); // try {\n    //   apiFetcher({\n    //     url: `http://api.weatherapi.com/v1/current.json?key=${process.env.REACT_APP_APIKEYW}&q=${userInput}&aqi=no`,\n    //   }).then((jsonData: JSON) => {\n    //     console.log(jsonData);\n    //     setData(parsingData(jsonData));\n    //   });\n    // } catch (error) {\n    //   setErrorMessage(\"The chosen location is not available.\");\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg w-2/3 m-auto h-4/5 relative top-10 border-2 border-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center p-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"pr-2\",\n          children: \"Choose a zip code or an address \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"rounded-md bg-slate-100 border-2 border-black ml-3\",\n          placeholder: \"75018 / Paris\",\n          onChange: e => setUserInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          className: \"bg-cyan-200 rounded-md box-border text-black border-2 border-black cursor-pointer ml-2 overflow-hidden relative text-center\",\n          children: [\" \", \"Search\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-600 text-center\",\n        children: [\" \", errorMessage, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), dataWeather && /*#__PURE__*/_jsxDEV(WeatherVue, {\n        name: dataWeather.name,\n        region: dataWeather.region,\n        country: dataWeather.country,\n        humidity: dataWeather.humidity,\n        tempC: dataWeather.tempC,\n        tempF: dataWeather.tempF\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ActualPos, \"6tV/YxPHdEIZL+2h+AYlYUO+0Uk=\");\n\n_c = ActualPos;\nexport default ActualPos;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActualPos\");","map":{"version":3,"names":["React","useState","apiFetcher","parsingData","WeatherVue","ActualPos","location","setLocation","userInput","setUserInput","errorMessage","setErrorMessage","dataWeather","setData","date","Date","useEffect","navigator","geolocation","getCurrentPosition","pos","loc","longitude","coords","toString","latitude","handleSubmit","url","process","env","REACT_APP_APIKEYW","then","jsonData","e","target","value","name","region","country","humidity","tempC","tempF"],"sources":["/Users/antoinebarbet/Projet Perso/weatherapp/src/component/actualPos.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { ReactComponent as Weather_icons_cloudy } from \"../SVG/weather_icons_cloudy.svg\";\nimport type { Pos } from \"../interface/pos\";\nimport apiFetcher from \"../shared/apiFetcher\";\nimport { DataWeather } from \"../interface/data\";\nimport parsingData from \"../shared/parsingData\";\nimport WeatherVue from \"./weather\";\n\nconst ActualPos = () => {\n  const [location, setLocation] = useState<Pos>();\n  const [userInput, setUserInput] = useState<string>();\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [dataWeather, setData] = useState<DataWeather>();\n\n  const date = new Date();\n\n  React.useEffect(() => {\n    navigator.geolocation.getCurrentPosition((pos) => {\n      let loc: Pos = {\n        longitude: pos.coords.longitude.toString(),\n        latitude: pos.coords.latitude.toString(),\n      };\n      setLocation(loc);\n    });\n  }, [location]);\n\n  const handleSubmit = async () => {\n    if (!userInput) {\n      return;\n    }\n    apiFetcher({\n      url: `http://api.weatherapi.com/v1/current.json?key=${process.env.REACT_APP_APIKEYW}&q=${userInput}&aqi=no`,\n    }).then((jsonData) => {\n      if (typeof jsonData === \"string\") {\n        setErrorMessage(\"The chosen location is not available.\");\n      } else {\n        setData(parsingData(jsonData));\n        setErrorMessage(\"\");\n      }\n    });\n\n    // try {\n    //   apiFetcher({\n    //     url: `http://api.weatherapi.com/v1/current.json?key=${process.env.REACT_APP_APIKEYW}&q=${userInput}&aqi=no`,\n    //   }).then((jsonData: JSON) => {\n    //     console.log(jsonData);\n    //     setData(parsingData(jsonData));\n    //   });\n    // } catch (error) {\n    //   setErrorMessage(\"The chosen location is not available.\");\n    // }\n  };\n  return (\n    <>\n      <div className=\"bg-white rounded-lg w-2/3 m-auto h-4/5 relative top-10 border-2 border-gray-200\">\n        {/*\n        <Weather_icons_cloudy /> */}\n        <div className=\"flex justify-center p-1\">\n          <p className=\"pr-2\">Choose a zip code or an address </p>\n          <input\n            className=\"rounded-md bg-slate-100 border-2 border-black ml-3\"\n            placeholder=\"75018 / Paris\"\n            onChange={(e) => setUserInput(e.target.value)}\n          />\n          <button\n            onClick={handleSubmit}\n            className=\"bg-cyan-200 rounded-md box-border text-black border-2 border-black cursor-pointer ml-2 overflow-hidden relative text-center\"\n          >\n            {\" \"}\n            Search{\" \"}\n          </button>\n        </div>\n        {errorMessage && (\n          <p className=\"text-red-600 text-center\"> {errorMessage} </p>\n        )}\n        {dataWeather && (\n          <WeatherVue\n            name={dataWeather.name}\n            region={dataWeather.region}\n            country={dataWeather.country}\n            humidity={dataWeather.humidity}\n            tempC={dataWeather.tempC}\n            tempF={dataWeather.tempF}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default ActualPos;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}